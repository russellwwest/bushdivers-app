<?php

namespace Tests\Unit\Services\Finance;

use App\Enums\UserTransactionTypes;
use App\Models\User;
use App\Services\Finance\LogUserAccountEntry;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class LogUserAccountEntryTest extends TestCase
{
    use RefreshDatabase;
    protected LogUserAccountEntry $logUserAccountEntry;
    protected Model $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->logUserAccountEntry = app()->make(LogUserAccountEntry::class);
        $this->user = User::factory()->create([
            'cash' => 200.00
        ]);
    }

    /**
     * A basic unit test example.
     */
    public function test_user_account_entry_added(): void
    {
        $this->logUserAccountEntry->execute($this->user->id, UserTransactionTypes::Bonus, 200.00);
        $this->assertDatabaseHas('user_account_ledgers', [
            'user_id' => $this->user->id,
            'total' => 200.00
        ]);
    }

    public function test_user_cash_updated(): void
    {
        $this->logUserAccountEntry->execute($this->user->id, UserTransactionTypes::Bonus, 200.00);
        $this->user->refresh();
        $this->assertEquals(400.00, $this->user->cash);
    }
}
