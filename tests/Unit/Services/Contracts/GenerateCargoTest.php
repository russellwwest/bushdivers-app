<?php

namespace Tests\Unit\Services\Contracts;

use App\Models\CargoTypes;
use App\Services\Contracts\GenerateCargo;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class GenerateCargoTest extends TestCase
{
    use RefreshDatabase;

    protected GenerateCargo $generateCargo;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        CargoTypes::factory()->create([
            'cargo_type' => 1,
            'cargo_type_text' => 'Food stuffs'
        ]);
        CargoTypes::factory()->create([
            'cargo_type' => 1,
            'cargo_type_text' => 'Clothing'
        ]);
        CargoTypes::factory()->create([
            'cargo_type' => 2,
            'cargo_type_text' => 'Tourists'
        ]);
        CargoTypes::factory()->create([
            'cargo_type' => 2,
            'cargo_type_text' => 'Journalists'
        ]);
        $this->generateCargo = app()->make(GenerateCargo::class);
    }

    /**
     * A basic unit test example.
     */
    public function test_cargo_returns_array(): void
    {
        $cargo = $this->generateCargo->execute();
        $this->assertIsArray($cargo);
    }

    public function test_cargo_returns_correct_content(): void
    {
        $cargo = $this->generateCargo->execute();
        $this->assertArrayHasKey('name', $cargo);
        $this->assertArrayHasKey('type', $cargo);
        $this->assertArrayHasKey('qty', $cargo);
    }

    public function test_cargo_returns_correct_content_types(): void
    {
        $cargo = $this->generateCargo->execute();
        $this->assertIsString($cargo['name']);
        $this->assertIsInt($cargo['type']);
        $this->assertIsInt($cargo['qty']);
    }
}
