<?php

namespace Tests\Unit\Services\Contracts;

use App\Models\Airport;
use App\Services\Contracts\GetAirportsForContractGeneration;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class GetAirportsForContractGenerationTest extends TestCase
{
    use RefreshDatabase;
    protected Model $aymr;
    protected Model $aymn;
    protected Model $aymh;
    protected Model $egbs;
    protected GetAirportsForContractGeneration $getAirportsForContractGeneration;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->getAirportsForContractGeneration = app()->make(GetAirportsForContractGeneration::class);
        $this->aymr = Airport::factory()->create();
        $this->aymh = Airport::factory()->create([
            'identifier' => 'AYMH',
            'name' => 'Mount Hagen',
            'lat' => -5.82781,
            'lon' => 144.29953
        ]);
        $this->aymn = Airport::factory()->create([
            'identifier' => 'AYMN',
            'name' => 'Mendi',
            'lat' => -6.14617,
            'lon' => 143.65733
        ]);
        $this->egbs = Airport::factory()->create([
            'identifier' => 'EGBS',
            'name' => 'Shobdon',
            'lat' => 52.24166,
            'lon' => -2.88111
        ]);
        $this->ayfo = Airport::factory()->create([
            'identifier' => 'AYFO',
            'name' => 'Fogomaiu Airstrip',
            'lat' => -6.50917,
            'lon' => 143.07904
        ]);
    }

    /**
     * A basic unit test example.
     */
    public function test_three_airports_returned_for_aymn(): void
    {
        $airports = $this->getAirportsForContractGeneration->execute($this->aymn);
        $this->assertEquals(3, $airports->count());
    }

    public function test_no_airports_returned_for_egbs(): void
    {
        $airports = $this->getAirportsForContractGeneration->execute($this->egbs);
        $this->assertEquals(0, $airports->count());
    }
}
