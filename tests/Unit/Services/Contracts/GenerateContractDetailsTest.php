<?php

namespace Tests\Unit\Services\Contracts;

use App\Models\Airport;
use App\Models\CargoTypes;
use App\Services\Contracts\GenerateContractDetails;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class GenerateContractDetailsTest extends TestCase
{
    use RefreshDatabase;
    protected Model $aymr;
    protected Model $aymh;
    protected GenerateContractDetails $generateContractDetails;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->aymr = Airport::factory()->create();
        $this->aymh = Airport::factory()->create([
            'identifier' => 'AYMH',
            'name' => 'Mount Hagen',
            'lat' => -5.82781,
            'lon' => 144.29953,
            'magnetic_variance' => 5.51567
        ]);
        CargoTypes::factory()->create([
            'cargo_type' => 1,
            'cargo_type_text' => 'Food stuffs'
        ]);
        CargoTypes::factory()->create([
            'cargo_type' => 1,
            'cargo_type_text' => 'Clothing'
        ]);
        CargoTypes::factory()->create([
            'cargo_type' => 2,
            'cargo_type_text' => 'Tourists'
        ]);
        CargoTypes::factory()->create([
            'cargo_type' => 2,
            'cargo_type_text' => 'Journalists'
        ]);
        $this->generateContractDetails = app()->make(GenerateContractDetails::class);
    }

    /**
     * A basic unit test example.
     */
    public function test_contract_details_is_array(): void
    {
        $contract = $this->generateContractDetails->execute($this->aymr, $this->aymh);
        $this->assertIsArray($contract);
    }

    public function test_contract_details_returns_correct_content(): void
    {
        $contract = $this->generateContractDetails->execute($this->aymr, $this->aymh);
        $this->assertArrayHasKey('departure', $contract);
        $this->assertArrayHasKey('destination', $contract);
        $this->assertArrayHasKey('cargo', $contract);
        $this->assertArrayHasKey('cargo_type', $contract);
        $this->assertArrayHasKey('cargo_qty', $contract);
        $this->assertArrayHasKey('distance', $contract);
        $this->assertArrayHasKey('heading', $contract);
        $this->assertArrayHasKey('contract_value', $contract);
        $this->assertArrayHasKey('expires_at', $contract);
    }

    public function test_contract_details_returns_correct_content_types(): void
    {
        $contract = $this->generateContractDetails->execute($this->aymr, $this->aymh);
        $this->assertIsString($contract['departure']);
        $this->assertIsString($contract['destination']);
        $this->assertIsString($contract['cargo']);
        $this->assertIsInt($contract['cargo_type']);
        $this->assertIsInt($contract['cargo_qty']);
        $this->assertIsFloat($contract['distance']);
        $this->assertIsInt($contract['heading']);
        $this->assertIsFloat($contract['contract_value']);
        $this->assertIsObject($contract['expires_at']); // Carbon Object
    }
}
