<?php

namespace Tests\Unit\Services\Contracts;

use App\Models\Contract;
use App\Models\User;
use App\Services\Contracts\AcceptContract;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class AcceptContractTest extends TestCase
{
    use RefreshDatabase;

    protected Model $user;
    protected Model $contract;
    protected AcceptContract $acceptContract;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create();
        $this->contract = Contract::factory()->create();
        $this->acceptContract = app()->make(AcceptContract::class);
    }

    /**
     * A basic unit test example.
     */
    public function test_contract_is_accepted(): void
    {
        $this->acceptContract->execute($this->contract->id, $this->user->id);
        $this->contract->refresh();
        $this->assertEquals(0, $this->contract->is_available);
        $this->assertEquals($this->user->id, $this->contract->user_id);
    }

    public function test_contract_is_unaccepted(): void
    {
        $this->acceptContract->execute($this->contract->id, null, false);
        $this->contract->refresh();
        $this->assertEquals(1, $this->contract->is_available);
        $this->assertNull($this->contract->user_id);
    }
}
